AWSTemplateFormatVersion: "2010-09-09"

Description: AWS CloudFormation workshop - Pseudo parameters

# Add your code here!
Parameters:
  DatabaseUsername:
    AllowedPattern: ^[a-z0-9]{5,12}$
    Type: String
    Description: Value to be used with the dbUsername SSM parameter. The default value is set to 'alice', which users can override when creating a CloudFormation stack.

Resources:
  SSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: dbusername
      Type: String
      Value: !Ref DatabaseUsername
      Description: SSM Parameter for database username 
  IAMRole:
    Type: AWS::IAM::Role    
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: ssm:GetParameter
                Resource: !Sub 'arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${SSMParameter}'
          PolicyName: read-ssm
  LambdaFn:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import boto3
          client = boto3.client('ssm')

          def lambda_handler(event, context):
              response = client.get_parameter(Name='dbusername')
              print(f'SSM dbUsername parameter value: {response["Parameter"]["Value"]}')
      Role: !GetAtt IAMRole.Arn
      Runtime: python3.12
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub cfn-101-${AWS::Region}-${AWS::AccountId}
              

